{"version":3,"sources":["Components/header/Header.js","Components/content/Content.js","Components/footer/Footeer.js","App.js","reportWebVitals.js","index.js"],"names":["Header","react_default","a","createElement","Content","_ref","questions","_useState","useState","_useState2","Object","slicedToArray","questionIndex","activeQuestion","question","english","id","htmlFor","answer","aria-label","type","aria-checked","value","name","Footer","today","Date","getFullYear","App","className","header_Header","content_Content","level","romana","image","Footeer","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"sPAYeA,eARA,WACX,OACIC,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,iDC6BGC,SAhCC,SAAAC,GAAmB,IAAhBC,EAAgBD,EAAhBC,UAAgBC,EACWC,mBAAS,GADpBC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACxBK,EADwBH,EAAA,GAEzBI,GAFyBJ,EAAA,GAERH,EAAUM,IAEjC,OACIX,EAAAC,EAAAC,cAAA,YACIF,EAAAC,EAAAC,cAAA,gBACIF,EAAAC,EAAAC,cAAA,oLAKAF,EAAAC,EAAAC,cAAA,cAASU,EAAeC,SAASC,SAEjCd,EAAAC,EAAAC,cAAA,OAAKa,GAAG,iBACJf,EAAAC,EAAAC,cAAA,SAAOc,QAASJ,EAAeG,IAC1BH,EAAeK,QAEpBjB,EAAAC,EAAAC,cAAA,SACIa,GAAIH,EAAeG,GACnBG,aAAYN,EAAeK,OAC3BE,KAAK,QACLC,eAAa,QACbC,MAAOT,EAAeK,OACtBK,KAAK,gBCfdC,SATA,WACX,IAAMC,EAAQ,IAAIC,KAClB,OACIzB,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,2BAAqBsB,EAAME,kBCwCxBC,MA3Cf,WAkCI,OACI3B,EAAAC,EAAAC,cAAA,OAAK0B,UAAU,OACX5B,EAAAC,EAAAC,cAAC2B,EAAD,MACA7B,EAAAC,EAAAC,cAAC4B,EAAD,CAASzB,UApCC,CACd,CACIU,GAAI,EACJgB,MAAO,EACPlB,SAAU,CACNmB,OAAQ,8CACRlB,QAAS,6CAEbG,OAAQ,aACRgB,MAAO,iFAEX,CACIlB,GAAI,EACJgB,MAAO,EACPlB,SAAU,CACNmB,OAAQ,8CACRlB,QAAS,2CAEbG,OAAQ,YACRgB,MAAO,iFAEX,CACIlB,GAAI,EACJgB,MAAO,EACPlB,SAAU,CACNmB,OAAQ,6CACRlB,QAAS,0CAEbG,OAAQ,UACRgB,MAAO,oFAQPjC,EAAAC,EAAAC,cAACgC,EAAD,QC/BGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAApC,GAAiD,IAA9CsC,EAA8CtC,EAA9CsC,OAAQC,EAAsCvC,EAAtCuC,OAAQC,EAA8BxC,EAA9BwC,OAAQC,EAAsBzC,EAAtByC,OAAQC,EAAc1C,EAAd0C,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDDW,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHnD,EAAAC,EAAAC,cAACF,EAAAC,EAAMmD,WAAP,KACEpD,EAAAC,EAAAC,cAACmD,EAAD,QAOJlB","file":"static/js/main.93451117.chunk.js","sourcesContent":["import \"./header.css\";\r\nimport React from 'react'\r\n\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <h1>Hello to our language app</h1>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import \"./content.css\";\r\nimport { useState } from \"react\";\r\nimport React from \"react\";\r\n\r\nconst Content = ({ questions }) => {\r\n    const [questionIndex, setQuestionIndex] = useState(0);\r\n    const activeQuestion = questions[questionIndex];\r\n\r\n    return (\r\n        <main>\r\n            <fieldset>\r\n                <p>\r\n                    Do you know which criteria should be met for Google Assistant\r\n                    to be able to read a page? Is it related to the structure of\r\n                    the page, the domain name or something else?\r\n                </p>\r\n                <legend>{activeQuestion.question.english}</legend>\r\n\r\n                <div id=\"group_label_1\">\r\n                    <label htmlFor={activeQuestion.id}>\r\n                        {activeQuestion.answer}\r\n                    </label>\r\n                    <input\r\n                        id={activeQuestion.id}\r\n                        aria-label={activeQuestion.answer}\r\n                        type=\"radio\"\r\n                        aria-checked=\"false\"\r\n                        value={activeQuestion.answer}\r\n                        name=\"choice\"\r\n                    />\r\n                </div>\r\n            </fieldset>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Content;\r\n","import './footer.css'\r\nimport React from 'react'\r\n\r\n\r\nconst Footer = () => {\r\n    const today = new Date();\r\n    return (\r\n        <footer>\r\n            <p>Copyright &copy; {today.getFullYear()}</p>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import Header from \"./Components/header/Header.js\";\nimport Content from \"./Components/content/Content\";\nimport Footer from \"./Components/footer/Footeer\";\nimport React from \"react\";\n\nfunction App() {\n    const questions = [\n        {\n            id: 1,\n            level: 1,\n            question: {\n                romana: \"Care dintre acestea este “cafea“?\",\n                english: \"Which one of these is “coffee”?\",\n            },\n            answer: \"das Kaffee\",\n            image: \"https://d2pur3iezf4d1j.cloudfront.net/images/6fd84b8a838c43c4a84b44b08b10177e\",\n        },\n        {\n            id: 2,\n            level: 1,\n            question: {\n                romana: \"Care dintre acestea este “lapte“?\",\n                english: \"Which one of these is “milk”?\",\n            },\n            answer: \"die Milch\",\n            image: \"https://d2pur3iezf4d1j.cloudfront.net/images/645fa42dcea02c7e2970a1285e321562\",\n        },\n        {\n            id: 3,\n            level: 1,\n            question: {\n                romana: \"Care dintre acestea este “ceai“?\",\n                english: \"Which one of these is “tea”?\",\n            },\n            answer: \"der Tee\",\n            image: \"https://d2pur3iezf4d1j.cloudfront.net/images/18a521f1507cb86689faa5b2e8277703\",\n        },\n    ];\n\n    return (\n        <div className=\"App\">\n            <Header />\n            <Content questions={questions} />\n            <Footer />\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}